import PyPDF2

def merge_pdfs(pdf_list, output_path):
    pdf_merger = PyPDF2.PdfMerger()
    for pdf in pdf_list:
        try:
            pdf_merger.append(pdf)
        except FileNotFoundError:
            print(f"Dosya bulunamadÄ±: {pdf}")
        except Exception as e:
            print(f"Hata oluÅŸtu {pdf} iÃ§in: {e}")
    pdf_merger.write(output_path)
    pdf_merger.close()
    print(f"PDF dosyalarÄ± baÅŸarÄ±yla birleÅŸtirildi ve {output_path} olarak kaydedildi.")

def split_pdf(pdf_path, output_folder):
    try:
        pdf_reader = PyPDF2.PdfReader(pdf_path)
        for page_num in range(len(pdf_reader.pages)):
            pdf_writer = PyPDF2.PdfWriter()
            pdf_writer.add_page(pdf_reader.pages[page_num])
            output_path = f"{output_folder}/page_{page_num + 1}.pdf"
            with open(output_path, 'wb') as output_pdf:
                pdf_writer.write(output_pdf)
            print(f"Sayfa {page_num + 1} kaydedildi: {output_path}")
    except FileNotFoundError:
        print(f"Dosya bulunamadÄ±: {pdf_path}")
    except Exception as e:
        print(f"Hata oluÅŸtu: {e}")

def main():
    print("ğŸ“„ PDF BirleÅŸtirici / BÃ¶lÃ¼cÃ¼")
    choice = input("1 - PDF birleÅŸtir\n2 - PDF bÃ¶l\nSeÃ§iminiz: ")
    
    if choice == '1':
        files = input("BirleÅŸtirilecek PDF dosyalarÄ±nÄ±n yollarÄ±nÄ± virgÃ¼lle ayÄ±rarak girin: ").split(',')
        output = input("OluÅŸacak dosya adÄ± (Ã¶rn: merged.pdf): ")
        merge_pdfs([f.strip() for f in files], output)
    elif choice == '2':
        pdf_path = input("BÃ¶lÃ¼necek PDF dosyasÄ±nÄ±n yolunu girin: ")
        output_folder = input("SayfalarÄ±n kaydedileceÄŸi klasÃ¶r yolunu girin: ")
        split_pdf(pdf_path.strip(), output_folder.strip())
    else:
        print("GeÃ§ersiz seÃ§im.")

if __name__ == "__main__":
    main()
